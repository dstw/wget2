variables:
  BUILD_IMAGES_PROJECT: gnuwget/build-images
  DEBIAN_BUILD: buildenv-debian-stretch
  FEDORA_BUILD: buildenv-f26
  CENTOS7_BUILD: buildenv-centos7
  GET_SOURCES_ATTEMPTS: "3"
  CONFIGURE_BASE_FLAGS: --enable-assert


# We organize the CI runners as thus:
#   1. Debian Stretch Build:
#       * ASan and UBSan builds
#       * make syntax-check
#       * make distcheck
#
#   2. Fedora 25 Build
#       * LLVM/Clang Build
#       * Valgrind Tests
#
#   3. CentOS7 Build
#       * Build with musl / newlib
#       * Minimal Build (All features disabled)
#
#   This way we split most of the different build options across different
#   platforms as well. Other builds we would like to have:
#
#   1. Windows
#   2. OSX
#   3. Documentation Generation and Gitlab pages
#   4. Code coverage stats

# In this build we combine
#  * syntax-check
#  * ASan, UBSan, Msan
#  * distcheck
Debian GNU/Linux build:
  before_script:
    - apt-get update -qq && apt-get install -y -qq libmicrohttpd-dev
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$DEBIAN_BUILD
  script:
    - ./bootstrap && touch .manywarnings
    - CC=clang ./configure $CONFIGURE_BASE_FLAGS --enable-fsanitize-asan --enable-fsanitize-ubsan -C
    - make -j$(nproc) check
    - make -j$(nproc) clean
# memory sanitizer only makes sense when all dependencies are also compiled with it
#    - CC=clang ./configure -C --enable-fsanitize-msan
#    - make -j$(nproc) check
#    - make -j$(nproc) distcheck
  tags:
    - shared
  artifacts:
    expire_in: 2 weeks
    when: on_failure
    paths:
      - ./*.log
      - fuzz/*.log
      - unit-tests/*.log
      - tests/*.log

clang/Fedora:
  before_script:
    - dnf -y install libmicrohttpd-devel
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$FEDORA_BUILD
  script:
    - export CC=clang
    - export CXX=clang++
    - ./bootstrap && touch .manywarnings
    - ./configure $CONFIGURE_BASE_FLAGS --enable-valgrind-tests
    - make -j$(nproc) check
  tags:
    - shared
  except:
    - tags
  artifacts:
    expire_in: 2 weeks
    when: on_failure
    paths:
      - tests/*

#Centos7 build:
#  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$CENTOS7_BUILD
#  script:
#  - sed -i 's/AM_GNU_GETTEXT_VERSION(0.19.3)/AM_GNU_GETTEXT_VERSION(0.18.2)/g' configure.ac
#  - ./bootstrap && ./configure --enable-gcc-warnings --disable-doc && make -j$(nproc) check
#  tags:
#  - shared
#  artifacts:
#    expire_in: 2 weeks
#    when: on_failure
#    paths:
#      - tests/*.log
#      - compat_reports/

pages:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$DEBIAN_BUILD
  script:
    - ./bootstrap
    - CFLAGS="-g -O0" ./configure
    - make -j$(nproc) check-coverage
    - mkdir -p public
    # Test suite coverage report
    - rm -rf public/coverage
    - mv lcov public/coverage
    # Online Documentation
    - rm -rf public/reference
    - mv docs/html public/reference
    # Coverage report for all our fuzz corpora
    - make -j$(nproc) fuzz-coverage
    - rm -rf public/fuzz-coverage
    - mv lcov public/fuzz-coverage
  tags:
    - shared
  artifacts:
    when: on_success
    paths:
      - public
  only:
    - master
    - tmp-online-fuzz-coverage

MinGW64:
  image: $CI_REGISTRY/$BUILD_IMAGES_PROJECT:$DEBIAN_BUILD
  script:
  - dpkg --add-architecture i386
  - apt-get -y update
  - apt-get -y install gcc-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-x86-64-dev pkg-config-mingw-w64-x86-64 win-iconv-mingw-w64-dev wine wine32 wget
  - cd ..
  - export PREFIX=x86_64-w64-mingw32
  - export CC=$PREFIX-gcc
  - export CPP=$PREFIX-cpp
  - export RANLIB=$PREFIX-ranlib
  - export PATH="/usr/$PREFIX/bin:$PATH"
  - export CFLAGS="-O2 -Wall -Wno-format"
  # Install Libmicrohttpd from source
  - git clone https://gnunet.org/git/libmicrohttpd.git
  - cd libmicrohttpd
  - git checkout c0168fde5043523
  - ./bootstrap
  - ./configure --build=x86_64-pc-linux-gnu --host=$PREFIX --prefix=/usr/$PREFIX --disable-doc --disable-examples --enable-shared --enable-static
  - make clean
  - make -j$(nproc)
  - make install
  - cd - && cd wget2
  - ./bootstrap
  - export CXX=$PREFIX-g++
  - export WINEPATH="/usr/$PREFIX/bin;/usr/$PREFIX/lib;$PWD/libwget/.libs"
  - ./configure --build=x86_64-pc-linux-gnu --host=$PREFIX --enable-shared --enable-static
  - make clean
  - make -j$(nproc)
  - make check -j$(nproc) LOG_COMPILER=wine
  tags:
  - shared
  - docker
  except:
  - tags
  artifacts:
    expire_in: 2 weeks
    when: on_failure
    paths:
      - ./*.log
      - fuzz/*.log
      - unit-tests/*.log
      - tests/*.log
